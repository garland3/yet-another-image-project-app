services:
  db:
    image: postgres:15
    container_name: postgres_db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    ports:
      - "5433:5432"
    networks:
      - data_mgmt_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  minio:
    image: minio/minio:latest
    container_name: minio_storage
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"
      - "9090:9090"
    env_file:
      - .env
    environment:
      MINIO_ROOT_USER: ${S3_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${S3_SECRET_KEY}
    command: server /data --console-address ":9090"
    networks:
      - data_mgmt_net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    restart: unless-stopped

  app:
    build:
      context: .
      target: final
    container_name: fastapi_app
    env_file:
      - .env
    ports:
    # for testing use some obscure port
      - "8007:8000"
    # volumes:
    #   - ./app:/app/app
    #   - ./frontend:/app/frontend
    #   - ./app/ui:/app/app/ui
    networks:
      - data_mgmt_net
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_healthy
    restart: unless-stopped

networks:
  data_mgmt_net:
    driver: bridge

volumes:
  postgres_data:
  minio_data:
